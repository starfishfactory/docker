name: Build vibe-kanban Enhanced Image

on:
  push:
    branches: [ main, master ]
    paths:
      - 'vibe-kanban/**'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'vibe-kanban/**'
  workflow_dispatch:

env:
  IMAGE_NAME: vibe-kanban-enhanced
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build Docker image
      uses: docker/build-push-action@v6
      with:
        context: ./vibe-kanban
        file: ./vibe-kanban/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

    - name: Build local image for artifact
      if: github.event_name != 'pull_request'
      uses: docker/build-push-action@v6
      with:
        context: ./vibe-kanban
        file: ./vibe-kanban/Dockerfile
        load: true
        tags: ${{ env.IMAGE_NAME }}:latest
        cache-from: type=gha

    - name: Save image as tar.gz
      if: github.event_name != 'pull_request'
      run: |
        docker save ${{ env.IMAGE_NAME }}:latest | gzip > ${{ env.IMAGE_NAME }}.tar.gz
        ls -lh ${{ env.IMAGE_NAME }}.tar.gz

    - name: Upload image artifact
      if: github.event_name != 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.IMAGE_NAME }}-${{ github.sha }}
        path: ${{ env.IMAGE_NAME }}.tar.gz
        retention-days: 30

    - name: Create build summary
      if: github.event_name != 'pull_request'
      run: |
        echo "## 🐳 Docker Image Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Image**: \`${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Tags**: \`${{ steps.meta.outputs.tags }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Platforms**: linux/amd64, linux/arm64" >> $GITHUB_STEP_SUMMARY
        echo "- **Artifact**: Available for download as \`${{ env.IMAGE_NAME }}-${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📦 Usage" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "# Download artifact and load image:" >> $GITHUB_STEP_SUMMARY
        echo "docker load < ${{ env.IMAGE_NAME }}.tar.gz" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "# Or pull from registry:" >> $GITHUB_STEP_SUMMARY
        echo "docker pull ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY